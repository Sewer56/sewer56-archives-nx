{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "[host] Cargo Watch Test (Auto Test on Save)",
      "type": "shell",
      "command": "cargo watch -x \"test\" -w src/",
      "group": "test",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [],
    },
    {
      "label": "[host] Miri Watch Test (Auto Test with Miri on Save)",
      "type": "shell",
      "command": "cargo watch -x \"miri test\" -w src/",
      "group": "test",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [],
    },
    {
      "label": "[32bit-bigendian]  Cargo Watch Test (Auto Test on Save)",
      "type": "shell",
      "command": "cargo watch -w src/ -- cross test --target powerpc-unknown-linux-gnu",
      "group": "test",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "RUST_BACKTRACE": "1"
        }
      }
    },
    {
      "label": "[64bit-bigendian]  Cargo Watch Test (Auto Test on Save)",
      "type": "shell",
      "command": "cargo watch -w src/ -- cross test --target powerpc64-unknown-linux-gnu",
      "group": "test",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "RUST_BACKTRACE": "1"
        }
      }
    },
    {
      "label": "Reloaded: Cargo Watch Tarpaulin (Auto Coverage on Save)",
      "type": "shell",
      "command": "cargo watch -x \"tarpaulin --skip-clean --out Xml --out Html --engine llvm --target-dir target/coverage-build\" -w src/",
      "group": "test",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "Reloaded: Generate Code Coverage",
      "type": "shell",
      "command": "cargo tarpaulin --out Xml --out Html --engine llvm --target-dir target/coverage-build",
      "group": "test",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "Strip Whitespace",
      "command": "python",
      "args": [
          "${workspaceFolder}/.vscode/strip_whitespace.py",
          "${file}"
      ],
      "problemMatcher": [],
      "presentation": {
          "reveal": "never"
      },
    }
  ]
}
