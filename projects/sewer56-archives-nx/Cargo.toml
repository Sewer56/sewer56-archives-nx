[package]
name = "sewer56-archives-nx"
version = "0.1.0"
edition = "2021"
description = "High Performance Archive Format for Mod Assets"
repository = "https://github.com/Sewer56/sewer56-archives-nx"
license-file = "LICENSE"
include = ["src/**/*"]

[features]
default = ["lz4", "detect_num_cores", "hardened", "bzip3"]

# Uses additional nightly APIs in additional to the existing ones.
nightly = ["allocator-api2/nightly", "hashbrown/nightly", "safe-allocator-api/nightly"]

# See README.md for more information on using Profile-Guided Optimization.
pgo = []

# Enables support for LZ4 compression/decompression
lz4 = ["lz4-sys"]

# Enables support for BZip3 compression/decompression
bzip3 = ["dep:bzip3"]

# Adds additional runtime checks against untrusted input.
# This is useful if you receive NX2 files from the internet.
hardened = []

# Avoids core::fmt to reduce binary size.
# May reduce error message friendliness.
no_format = [ "lightweight-mmap/no-format" ]

# Auto detects the number of cores on the system.
# Disable this when targeting esoteric platforms; in which case defaults to 1.
detect_num_cores = ["num_cpus"]

# Adds additional tests to miri; those which normally take too long to run
# and are not strictly required.
miri_extra_checks = []

[dependencies]
bitfield = "0.17.0"
lz4-sys = { version = "1.11.1", optional = true }
zstd-sys = {version = "2.0.13", features = ["experimental"] } # 1.5.6
no-panic = "0.1.32"
int-enum = "1.1.2"
thiserror-no-std = "2.0.2"
memchr = "2.7.4"
hashbrown = { version = "0.15.2" }
nanokit = "0.2.0"
num_cpus = { version = "1.16.0", optional = true }
derive-new = "0.7.0"
derive_more = {version = "1.0.0", features = ["deref", "deref_mut"]}
ahash = "0.8.11"
endian-writer = "2.2.0"
endian-writer-derive = "0.1.0"
memmap2 = "0.9.5"
lightweight-mmap = { version = "0.4.3" }
static_assertions = "1.1.0"
o2o = "0.5.0"
twox-hash = "2.0.1"
safe-allocator-api = { version = "0.3.0" }
identity-hash = "0.1.0"
allocator-api2 = "0.2.21"
once_cell = "1.20.2"
bzip3 = { version = "0.9.0", optional = true }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dev-dependencies]
criterion = "0.5.1"
rstest = "0.23.0"
fake = { version = "3.0.1" }
itertools = "0.13.0"
tempfile = "3.14.0"

[target.'cfg(unix)'.dev-dependencies]
pprof = { version = "0.14", features = ["flamegraph", "criterion"] }

# Benchmark Stuff
[[bench]]
name = "my_benchmark"
path = "benches/my_benchmark/main.rs"
harness = false